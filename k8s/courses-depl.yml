apiVersion: apps/v1
kind: Deployment
metadata:
  name: courses-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: courses
  template:
    metadata:
      labels:
        app: courses
    spec:
      containers: 
        - name: courses
          image: uomlms/courses
          env:
            # created secret with command kubectl create secret generic jwt-secret --from-literal=JWT_SECRET=<KEY>
            - name: JWT_SECRET
              valueFrom: 
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
            # kubectl create secret generic aws-secret-access-key --from-literal=AWS_SECRET_ACCESS_KEY=<VALUE>
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom: 
                secretKeyRef:
                  name: aws-secret-access-key
                  key: AWS_SECRET_ACCESS_KEY
            # kubectl create secret generic aws-access-key-id --from-literal=AWS_ACCESS_KEY_ID=<VALUE>
            - name: AWS_ACCESS_KEY_ID
              valueFrom: 
                secretKeyRef:
                  name: aws-access-key-id
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_BUCKET
              value: uomlms
            - name: MONGO_URI
              value: mongodb://courses-mongo-srv:27017/courses
            - name: KAFKA_URL
              value: kafka-srv:9092
            - name: KAFKA_GROUP_ID
              value: courses
            
---
apiVersion: v1
kind: Service
metadata:
  name: courses-srv
spec:
  selector:
    app: courses
  ports:
    - name: courses
      protocol: TCP
      port: 3000
      targetPort: 3000